"use strict";var precacheConfig=[["/memorizer/index.html","c72a210383e7ac477f89029f4a8f715a"],["/memorizer/static/css/main.19674656.css","661012dbea95a5f5be5ddf283bc028b2"],["/memorizer/static/js/main.3408ac85.js","7730d9a7956023e577a886034fbc9336"],["/memorizer/static/media/angular.c77b8f85.png","c77b8f85f87a979a59907ad2b66576bd"],["/memorizer/static/media/atom.d09bbe8d.png","d09bbe8de7ea9b2d4a18f8aaa68553ca"],["/memorizer/static/media/beyin.df876b3e.png","df876b3e015557844a4439dbc7e86df7"],["/memorizer/static/media/brain.0b3e4272.png","0b3e42729a37a4bfdc2f97e9d97b0817"],["/memorizer/static/media/dna.b90cffbf.png","b90cffbfc1bfe778d9ae059a6274fd84"],["/memorizer/static/media/hali.2750549e.png","2750549ed8d0dca12e58fc8a8ed6cba7"],["/memorizer/static/media/hero-bg.6304cb45.png","6304cb456da3b1afabff449dba2e8462"],["/memorizer/static/media/kagıt_bos1.a167ac21.png","a167ac217ca7c301be535884b2056b15"],["/memorizer/static/media/kagıt_dolu1.9294dbed.png","9294dbedbe904ebddf5876592d9da625"],["/memorizer/static/media/pi.89595a44.png","89595a44a4e8349b4336767e37bc3efb"],["/memorizer/static/media/platform.7e2b1b18.png","7e2b1b187b48ccba63fa1ed7527505cd"],["/memorizer/static/media/right1.b1cdedb5.jpg","b1cdedb50e7e68f4a3a1e282325b4099"],["/memorizer/static/media/right2.e87b8855.jpg","e87b8855b7bbbfe7ca9c45fb600a0ed2"],["/memorizer/static/media/rocket.764f53bf.png","764f53bf8afef40466c19763a2ba844a"],["/memorizer/static/media/wrong3.cd1b1395.jpg","cd1b139532ee761c7de34bd83ab78545"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],r=new URL(t,self.location),n=createCacheKey(r,hashParamName,a,/\.\w{8}\./);return[r.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var r=new Request(a,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),r="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,r),t=urlsToCacheKeys.has(a));var n="/memorizer/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(n,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});